<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.archx.txblog.data.mapper.CommentMapper">

    <resultMap id="CommentPostMap" type="io.archx.txblog.data.domain.Comment">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="postId" column="post_id" jdbcType="INTEGER"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="BIGINT"/>
        <result property="updatedAt" column="updated_at" jdbcType="BIGINT"/>
        <association property="post" javaType="io.archx.txblog.data.domain.Post">
            <id property="id" column="post_id" jdbcType="INTEGER"/>
            <result property="title" column="title" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <select id="findAll" parameterType="string" resultMap="CommentPostMap">
        SELECT
        tc.id,
        tc.content,
        tc.`name`,
        tc.email,
        tc.parent_id,
        tc.root_id,
        tc.post_id,
        tc.state,
        tc.created_at,
        tc.updated_at,
        p.title
        FROM
        tx_comment tc
        LEFT JOIN tx_post p ON tc.post_id = p.id
        <where>
            <if test="searchText != null and searchText != ''">
                tc.content like concat('%', #{searchText}, '%')
                or tc.name like concat('%', #{searchText}, '%')
                or tc.email like concat('%', #{searchText}, '%')
                or p.title like concat('%', #{searchText}, '%')
            </if>
        </where>
        ORDER BY tc.created_at DESC
    </select>
</mapper>